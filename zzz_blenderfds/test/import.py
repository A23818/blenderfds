"""BlenderFDS, test import routines"""

import bpy

from .term_colors import *
from .utils import run, clean_dir

def test_file(filepath): # TODO
    # Import
    bpy.ops.import_scene.fds_case(filepath=filepath)
    import_file = bpy.path.basename(filepath)
    sc.name = import_file + "-exported"

    fds_dir = filepath[:-len(import_file)]
    ref_dir = bpy.path.abspath("//test/ref/{}".format(sc.bf_head_directory))
    fds_file = sc.name + ".fds"
    ge1_file = sc.name + ".ge1"
    fds_path = "/".join((fds_dir, fds_file))
    ge1_path = "/".join((fds_dir, ge1_file))
    fds_ref_path = "/".join((ref_dir, fds_file))
    ge1_ref_path = "/".join((ref_dir, ge1_file))


    print_h1("Testing import of file <{}>".format(filename))
    # Import
    bpy.ops.export_scene.fds_case(filepath=fds_path)


def test_scene(sc=None,fds=False):
    """Export scene to FDS and compare it to ref."""
    if not sc: sc = bpy.context.scene
    bpy.context.screen.scene = sc
    print_h2("Exporting Blender Scene <{}>".format(sc.name))
    # Check and init
    if not sc.bf_head_directory: raise Exception("No bf_head_directory")
    fds_dir = bpy.path.abspath(sc.bf_head_directory)
    ref_dir = bpy.path.abspath("//test/ref/{}".format(sc.bf_head_directory))
    fds_file = sc.name + ".fds"
    ge1_file = sc.name + ".ge1"
    fds_path = "/".join((fds_dir, fds_file))
    ge1_path = "/".join((fds_dir, ge1_file))
    fds_ref_path = "/".join((ref_dir, fds_file))
    ge1_ref_path = "/".join((ref_dir, ge1_file))
    # Clean dir
    clean_dir(fds_dir)
    # Export
    bpy.ops.export_scene.fds_case(filepath=fds_path)
    # Run diff on fds and ge1 file
    returncodes = {
        0:(True,"No differences"),
        1:(False,"Differences reported"),
        2:(False,"Reference file not found")
    }
    run(
        name="diff "+fds_file,
        args=("diff","-I","^! Generated by", "-I", "^! Date:",fds_path,fds_ref_path,),
        log_file=None,
        returncodes=returncodes,
    )
    run(
        name="diff "+ge1_file,
        args=("diff",ge1_path,ge1_ref_path,),
        log_file=None,
        returncodes=returncodes,
    )
    # Run fds
    if fds:
        run(
            name="fds "+fds_file,
            args=['fds',fds_path],
            cwd=fds_dir,
            log_file=None,
            returncodes={0:(True,"Simulation ok"),-11:(False,"Core dump")},
        )    

def test_file(fds=False):
    """Export and check all Scene data-blocks to FDS."""
    print_h1("Testing Blender file <{}>".format(bpy.path.basename(bpy.data.filepath)))
    for sc in bpy.data.scenes: test_scene(sc=sc,fds=fds)

